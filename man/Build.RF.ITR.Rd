% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Build.RF.ITR.R
\name{Build.RF.ITR}
\alias{Build.RF.ITR}
\title{Builds the random forest of interaction trees}
\usage{
Build.RF.ITR(dat, split.var, test = NULL, col.y = "y", col.r = "r",
  col.trt = "trt", col.prtx = "prtx", ctg = NULL, N0 = 20, n0 = 5,
  max.depth = 10, ntree = 500, mtry = max(floor(length(split.var)/3), 1),
  avoid.nul.tree = FALSE, AIPWE = FALSE, stabilize = TRUE,
  stabilize.type = c("linear", "rf"), haoda.method = TRUE,
  haoda.ae.level = NA, verbose = FALSE, reverse.ae.scale = FALSE,
  use.other.nodes = TRUE, extremeRandomized = FALSE, lambda = 0)
}
\arguments{
\item{dat}{the data set being used to grow the random forest. Required input.}

\item{split.var}{vector of columns containing the desired splitting variables.  Required input.}

\item{test}{indicator that determines if testing data is also run with each tree in the forest.  Defaults to FALSE.}

\item{col.y}{the response variable. Required input.}

\item{col.trt}{the treatment indicator.  Must be binary. Required input.}

\item{col.prtx}{the probability of being assigned to treatment group. Required input.}

\item{ctg}{identifies the categorical input columns.  Defaults to NA.  Not available yet.}

\item{N0}{minimum number of observations needed to call a node terminal.  Defaults to 20.}

\item{n0}{minimum number of treatment/control observations needed in a split to call a node terminal. Defaults to 5.}

\item{max.depth}{controls the maximum depth of the tree. Defaults to 10.}

\item{ntree}{sets the number of trees to be generated. Defaults to 500.}

\item{mtry}{sets the number of randomly selected splitting variables to be included. Defaults to max of length(split.var)/3 rounded down and 1.}

\item{avoid.nul.tree}{controls if trees with no splits (null trees) are allowed. Defaults to FALSE.}

\item{AIPWE}{logical. Should AIPWE (TRUE) or IPWE (FALSE) be used.}

\item{stabilize}{logical. Should a numerical stabilization be used. Can be random forest ('rf') or linear model ('linear')}

\item{stabilize.type}{either 'rf' or 'linear' if stabilization requested.}
}
\value{
A list of characteristics of the forest.

\item{ID.Boots.Samples}{list of bootstrap sample IDs}

\item{TREES}{list of trees}

\item{Model.Specification}{information about the input parameters of the forest}
}
\description{
This function constructs a random forest of ITR trees using either the IPWE or AIPWE
method. A forest object can be inputed into the `predict.ITR()` function along with data in order to 
obtain treatment predictions. A forest object can also be given to the `Variable.Importance.ITR()` 
function to estimate predictor importance.
}
\examples{
dat <- gdataM(n=1000, depth=2, beta1=3, beta2=1)
# This builds a forest of 100 trees using the dataset called 'dat' with columns
# 'y', 'trt', and 'prtx' for the outcome, treatement indicator, and probability of being
# in treatment group, respectively.  The splitting variables are found in columns 1-4, 
# and we chose to avoid null trees.
forest<-Build.RF.ITR(dat=dat, col.y="y", col.trt="trt", col.prtx="prtx", 
                     split.var=1:4, ntree=100, avoid.nul.tree=TRUE)
}
